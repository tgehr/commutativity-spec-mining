Try 1
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = r₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 2
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ = r₂∧ r₁ = v₁∧ r₁ = x₂∧ r₁ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 3
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 4
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ r₁ = value₁
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 5
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 6
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = r₂∧ r₁ = v₁∧ r₁ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 7
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₂∧ i₂ = v₁∧ r₁ < r₂∧ r₂ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 8
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = r₂∧ r₁ = v₁∧ r₁ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 9
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 10
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₂∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₁ ≤ b₁∧ b₁ < b₂∧ b₂ ≤ a₂∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 11
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₁∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 12
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 13
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): (i₂ = v₁∨ r₁ = v₁)∧ r₁ < r₂∧ r₂ < i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 14
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): (i₂ = v₁∨ r₁ = v₁)∧ r₁ < r₂∧ r₂ < i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 15
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ a₂ ≤ b₂∧ b₁ ≤ a₁∧ b₂ < b₁∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 16
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₂∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 17
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 18
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ < b₂∧ b₁ ≤ a₁∧ b₂ ≤ a₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 19
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 20
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 21
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ = v₁∧ r₁ = x₂∧ r₁ ≤ r₂∧ r₂ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 22
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 23
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₂∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₂∧ i₂ = v₁∧ r₁ < r₂∧ r₂ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 24
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₁∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 25
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 26
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 27
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = r₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 28
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ < b₁∧ b₁ ≤ a₁∧ b₂ ≤ a₂∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 29
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = r₂∧ r₁ = v₁∧ r₁ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 30
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 31
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₁ < v₁∧ r₂ < i₂∧ r₂ = x₂∧ v₁ < r₂∨ i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 32
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = r₂∧ r₁ = v₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 33
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 34
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ = r₂∧ i₂ ≠ v₁∧ r₁ = x₂∧ v₁ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 35
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₂ = r₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₁ < v₁∧ i₁ = r₂∧ i₁ = x₂∧ v₁ < i₂∨ i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 36
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 37
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 38
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = r₂∧ r₁ = v₁∧ x₂ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 39
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 40
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ < v₁∧ r₂ < i₂∧ v₁ = x₂∧ v₁ ≤ r₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 41
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ = v₁∧ r₁ = x₂∧ r₁ ≤ r₂∧ r₂ < i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 42
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₂∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 43
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₁ < v₁∧ r₂ < i₂∧ r₂ = x₂∧ v₁ < r₂∨ i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = r₂∧ r₁ = v₁∧ x₂ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 44
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 45
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₂∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 46
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): (i₂ = r₂∧ r₁ = x₂∨ r₁ = r₂∧ r₁ ≤ v₁∧ v₁ = x₂)∧ v₁ < i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 47
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 48
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 49
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ < v₁∧ i₂ = v₂∧ v₁ < i₂∨ i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ ≠ r₂∧ r₁ = v₁∧ r₂ < i₂∧ x₂ ≤ r₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 50
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 51
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂∨ i₁ = v₂∧ i₂ < v₁∧ v₁ < i₁
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 52
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 53
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 54
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = r₂∧ r₁ = v₁∧ r₁ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 55
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 56
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₁ ≤ b₁∧ a₂ < a₁∧ b₂ ≤ a₂∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ = v₁∧ r₁ = x₂∧ r₁ ≤ r₂∧ r₂ < i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 57
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 58
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ < v₁∧ r₂ < i₂∧ v₁ = x₂∧ v₁ ≤ r₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 59
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 60
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ = r₂∧ r₁ ≤ v₁∧ v₁ < i₂∧ v₁ = x₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 61
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 62
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = v₁∧ r₁ = r₂∧ r₁ ≤ x₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 63
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 64
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 65
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₂∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 66
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 67
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 68
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₁∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 69
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₂∧ i₂ = v₁∧ r₁ < r₂∧ r₂ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 70
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₂∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 71
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 72
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ ≠ r₂∧ r₁ = v₁∧ r₂ < i₂∧ x₂ ≤ r₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 73
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 74
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 75
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ r₁ = value₁
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ < r₂∧ r₂ ≤ v₁∧ v₁ < i₂∧ v₁ = x₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 76
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = value₂∧ r₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 77
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∧ i₁ = v₁∧ i₂ = r₂∧ i₂ = x₂∨ i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): (r₁ = x₂∧ r₂ < i₂∧ v₁ ≤ r₂∨ v₁ ≠ x₂)∧ r₂ ≠ v₁∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 78
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 79
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = r₁∧ key₁ = r₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 80
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 81
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 82
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 83
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ = r₂∧ i₂ ≠ v₁∧ r₁ = x₂∧ v₁ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 84
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 85
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 86
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): (r₁ < r₂∧ r₂ ≤ v₁∧ v₁ < i₂∨ v₁ ≠ x₂)∧ r₂ ≠ v₁∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 87
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 88
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 89
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = r₂∧ r₁ = v₁∧ r₁ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 90
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = r₂∧ key₂ = r₁
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): (r₁ = x₂∧ r₂ < i₂∧ v₁ ≤ r₂∨ v₁ ≠ x₂)∧ r₂ ≠ v₁∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 91
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 92
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 93
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₁ ≠ r₂∧ r₁ = v₁∧ r₂ < i₂∧ x₂ ≤ r₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 94
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 95
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = r₂∧ value₁ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 96
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 97
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 98
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ key₁ = r₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 99
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ ≠ r₁∧ i₂ = r₂∧ r₁ = v₁∧ x₂ ≤ i₂∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = r₂∧ x₁ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 100
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₁ = value₁∧ r₂ = value₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, size()/r₂): false
φ(get(i₁)/r₁, get(i₂)/r₂): true
φ(get(i₁)/r₁, indexOf(v₂)/r₂): true
φ(get(i₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(get(i₁)/r₁, remove_at(i₂)/r₂): i₁ < i₂
φ(get(i₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₂ = x₂
φ(get(i₁)/r₁, size()/r₂): true
φ(indexOf(v₁)/r₁, indexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(indexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(indexOf(v₁)/r₁, set(i₂,x₂)/r₂): r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(indexOf(v₁)/r₁, size()/r₂): true
φ(lastIndexOf(v₁)/r₁, lastIndexOf(v₂)/r₂): true
φ(lastIndexOf(v₁)/r₁, remove_at(i₂)/r₂): false
φ(lastIndexOf(v₁)/r₁, set(i₂,x₂)/r₂): i₂ < r₁∨ r₂ ≠ v₁∧ v₁ ≠ x₂∨ r₂ = x₂
φ(lastIndexOf(v₁)/r₁, size()/r₂): true
φ(remove_at(i₁)/r₁, remove_at(i₂)/r₂): i₁ = i₂
φ(remove_at(i₁)/r₁, set(i₂,x₂)/r₂): i₂ < i₁
φ(remove_at(i₁)/r₁, size()/r₂): false
φ(set(i₁,x₁)/r₁, set(i₂,x₂)/r₂): i₁ ≠ i₂∨ r₁ = x₁∧ r₂ = x₂
φ(set(i₁,x₁)/r₁, size()/r₂): true
φ(size()/r₁, size()/r₂): true
Try 101
Set!int
φ(contains(e₁)/r₁, contains(e₂)/r₂): true
φ(contains(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(contains(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): ¬ r₁
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
Map!(int, int)
φ(get(key₁)/r₁, get(key₂)/r₂): true
φ(get(key₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂∨ r₂ = value₂
φ(put(key₁,value₁)/r₁, put(key₂,value₂)/r₂): key₁ ≠ key₂
MultiSet!int
φ(num(e₁)/r₁, num(e₂)/r₂): true
φ(num(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂
φ(num(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₂
φ(num(e₁)/r₁, size()/r₂): true
φ(add(e₁)/r₁, add(e₂)/r₂): e₁ ≠ e₂∨ ¬ r₁∧ ¬ r₂
φ(add(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂
φ(add(e₁)/r₁, size()/r₂): false
φ(remove(e₁)/r₁, remove(e₂)/r₂): e₁ ≠ e₂∨ r₁∧ r₂∨ ¬ r₁∧ ¬ r₂
φ(remove(e₁)/r₁, size()/r₂): ¬ r₁
φ(size()/r₁, size()/r₂): true
MaxRegister!int
φ(get()/r₁, get()/r₂): true
φ(get()/r₁, set(v₂)/r₂): v₂ ≤ r₂
φ(set(v₁)/r₁, set(v₂)/r₂): v₁ ≤ r₁∧ v₂ ≤ r₂
RangeUpdate
φ(add2(l₁,r₁)/r₁, add2(l₂,r₂)/r₂): true
φ(add2(l₁,r₁)/r₁, square(l₂,r₂)/r₂): ¬ r₁∨ r₁ < l₁∨ r₁ < l₂∨ ¬ r₂∨ r₂ < l₁∨ r₂ < l₂
φ(square(l₁,r₁)/r₁, square(l₂,r₂)/r₂): true
KDTree!int
φ(add(t₁)/r₁, add(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(add(t₁)/r₁, remove(t₂)/r₂): t₁ ≠ t₂
φ(add(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(remove(t₁)/r₁, remove(t₂)/r₂): ¬ r₁∧ ¬ r₂∨ t₁ ≠ t₂
φ(remove(t₁)/r₁, nearest(t₂)/r₂): ¬ r₁∨ r₂ < t₁∧ t₂ ≤ r₂∨ r₂ ≤ t₂∧ t₁ < r₂
φ(nearest(t₁)/r₁, nearest(t₂)/r₂): true
Accumulator
φ(increase(v₁)/r₁, increase(v₂)/r₂): true
φ(increase(v₁)/r₁, read()/r₂): false
φ(read()/r₁, read()/r₂): true
UnionFind!("default", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∧ a₂ = b₂
UnionFind!("min", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ a₂ = b₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): true
UnionFind!("deterministic", false)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = b₂∨ a₂ = x₁
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = a₂∨ a₁ = b₁∨ a₂ = b₂
UnionFind!("default", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): ¬ r₁∧ ¬ r₂
UnionFind!("min", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ < r₁∧ b₂ < r₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂∨ r₁∧ r₂
UnionFind!("deterministic", true)
φ(add()/r₁, add()/r₂): true
φ(add()/r₁, find(x₂)/r₂): true
φ(add()/r₁, unite(a₂,b₂)/r₂): true
φ(find(x₁)/r₁, find(x₂)/r₂): true
φ(find(x₁)/r₁, unite(a₂,b₂)/r₂): a₂ = x₁∨ ¬ r₂
φ(unite(a₁,b₁)/r₁, unite(a₂,b₂)/r₂): (a₁ = a₂∨ a₁ = b₂∨ a₂ = b₁)∧ r₁∧ r₂∨ a₁ = b₁∨ a₂ = b₂∨ ¬ r₁∧ ¬ r₂
ArrayList!int
φ(add_at(i₁,v₁)/r₁, add_at(i₂,v₂)/r₂): i₁ = i₂∧ v₁ = v₂
φ(add_at(i₁,v₁)/r₁, get(i₂)/r₂): i₂ < i₁
φ(add_at(i₁,v₁)/r₁, indexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, lastIndexOf(v₂)/r₂): r₂ < i₁∧ v₁ ≠ v₂
φ(add_at(i₁,v₁)/r₁, remove_at(i₂)/r₂): false
φ(add_at(i₁,v₁)/r₁, set(i₂,x₂)/r₂): 